<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.hualuomoli.demo.base.mapper.BaseDemoMapper">

  <resultMap id="dataMap" type="com.github.hualuomoli.demo.base.entity.BaseDemo">
    <result column="id"            property="id" />
    <result column="name"          property="name" />
    <result column="sex"           property="sex" />
    <result column="salary"        property="salary" />
    <result column="age"           property="age" />
    <result column="birth_day"     property="birthDay" />
    <result column="remarks"       property="remarks" />
    <result column="user_username" property="user.username" />
    <result column="region_id"     property="region.id" />
    <result column="create_by"     property="createBy" />
    <result column="create_date"   property="createDate" />
    <result column="update_by"     property="updateBy" />
    <result column="update_date"   property="updateDate" />
    <result column="status"        property="status" />
    <result column="status_name"   property="statusName" />
  </resultMap>
  
  <sql id="querys">
    <if test="id != null and id != ''"> 
      and `id`            = #{id}           
    </if>
    <if test="name != null and name != ''"> 
      and `name`          = #{name}         
    </if>
    <if test="sex != null and sex != ''"> 
      and `sex`           = #{sex}          
    </if>
    <if test="salary != null"> 
      and `salary`        = #{salary}       
    </if>
    <if test="age != null"> 
      and `age`           = #{age}          
    </if>
    <if test="birthDay != null"> 
      and `birth_day`     = #{birthDay}     
    </if>
    <if test="remarks != null and remarks != ''"> 
      and `remarks`       = #{remarks}      
    </if>
    <if test="user != null and user.username != null and user.username != ''"> 
      and `user_username` = #{user.username}
    </if>
    <if test="region != null and region.id != null and region.id != ''"> 
      and `region_id`     = #{region.id}    
    </if>
    <if test="createBy != null and createBy != ''"> 
      and `create_by`     = #{createBy}     
    </if>
    <if test="createDate != null"> 
      and `create_date`   = #{createDate}   
    </if>
    <if test="updateBy != null and updateBy != ''"> 
      and `update_by`     = #{updateBy}     
    </if>
    <if test="updateDate != null"> 
      and `update_date`   = #{updateDate}   
    </if>
    <if test="status != null"> 
      and `status`        = #{status}       
    </if>
    <if test="statusName != null and statusName != ''"> 
      and `status_name`   = #{statusName}   
    </if>
	<!-- 比较查询 -->
    <if test="nameLeftLike != null and nameLeftLike != ''"> 
      and `name` like #{nameLeftLike}         
    </if>
    <if test="nameRightLike != null and nameRightLike != ''"> 
      and `name` like #{nameRightLike}         
    </if>
    <if test="nameBothLike != null and nameBothLike != ''"> 
      and `name` like #{nameBothLike}         
    </if>
    <if test="nameArray != null"> 
      and
      <foreach collection="nameArray" open="(" close=")" separator="or" item="data">
    		`name` = #{data}
    	</foreach>
    </if>
    <if test="salaryGreaterThan != null"> 
      and `salary` <![CDATA[>]]> #{salaryGreaterThan}         
    </if>
    <if test="salaryGreaterEqual != null"> 
      and `salary` <![CDATA[>=]]> #{salaryGreaterEqual}         
    </if>
    <if test="salaryLessThan != null"> 
      and `salary` <![CDATA[<]]> #{salaryLessThan}         
    </if>
    <if test="salaryLessEqual != null"> 
      and `salary` <![CDATA[<=]]> #{salaryLessEqual}         
    </if>
    <if test="salaryArray != null"> 
      and
      <foreach collection="salaryArray" open="(" close=")" separator="or" item="data">
    		`salary` = #{data}
    	</foreach>
    </if>
    <if test="ageGreaterThan != null"> 
      and `age` <![CDATA[>]]> #{ageGreaterThan}         
    </if>
    <if test="ageGreaterEqual != null"> 
      and `age` <![CDATA[>=]]> #{ageGreaterEqual}         
    </if>
    <if test="ageLessThan != null"> 
      and `age` <![CDATA[<]]> #{ageLessThan}         
    </if>
    <if test="ageLessEqual != null"> 
      and `age` <![CDATA[<=]]> #{ageLessEqual}         
    </if>
    <if test="ageArray != null"> 
      and
      <foreach collection="ageArray" open="(" close=")" separator="or" item="data">
    		`age` = #{data}
    	</foreach>
    </if>
    <if test="birthDayGreaterThan != null"> 
      and `birth_day` <![CDATA[>]]> #{birthDayGreaterThan}         
    </if>
    <if test="birthDayGreaterEqual != null"> 
      and `birth_day` <![CDATA[>=]]> #{birthDayGreaterEqual}         
    </if>
    <if test="birthDayLessThan != null"> 
      and `birth_day` <![CDATA[<]]> #{birthDayLessThan}         
    </if>
    <if test="birthDayLessEqual != null"> 
      and `birth_day` <![CDATA[<=]]> #{birthDayLessEqual}         
    </if>
    <if test="userArray != null"> 
      and
      <foreach collection="userArray" open="(" close=")" separator="or" item="data">
    		`user_username` = #{data}
    	</foreach>
    </if>
  </sql>
  
  <select id="get" resultMap="dataMap">
    select * from `test_demo`
    where id =  #{id}
  </select>
  
  <insert id="insert">
    insert into `test_demo` (
      `id`           ,
      `name`         ,
      `sex`          ,
      `salary`       ,
      `age`          ,
      `birth_day`    ,
      `remarks`      ,
      `user_username`,
      `region_id`    ,
      `create_by`    ,
      `create_date`  ,
      `update_by`    ,
      `update_date`  ,
      `status`       ,
      `status_name`  
    ) values (
      #{id}           ,
      #{name}         ,
      #{sex}          ,
      #{salary}       ,
      #{age}          ,
      #{birthDay}     ,
      #{remarks}      ,
      #{user.username},
      #{region.id}    ,
      #{createBy}     ,
      #{createDate}   ,
      #{updateBy}     ,
      #{updateDate}   ,
      #{status}       ,
      #{statusName}   
    )
  </insert>

  <insert id="batchInsert">
    insert into `test_demo` (
      `id`           ,
      `name`         ,
      `sex`          ,
      `salary`       ,
      `age`          ,
      `birth_day`    ,
      `remarks`      ,
      `user_username`,
      `region_id`    ,
      `create_by`    ,
      `create_date`  ,
      `update_by`    ,
      `update_date`  ,
      `status`       ,
      `status_name`  
    ) 
     <foreach collection="list" item="obj" separator="union all">
     	select
        #{obj.id}           ,
        #{obj.name}         ,
        #{obj.sex}          ,
        #{obj.salary}       ,
        #{obj.age}          ,
        #{obj.birthDay}     ,
        #{obj.remarks}      ,
        #{obj.user.username},
        #{obj.region.id}    ,
        #{obj.createBy}     ,
        #{obj.createDate}   ,
        #{obj.updateBy}     ,
        #{obj.updateDate}   ,
        #{obj.status}       ,
        #{obj.statusName}   
         </foreach>
  </insert>
  
  <update id="update">
    update `test_demo`
    <set>
      <if test="name != null"> 
        `name`          = #{name}         ,
      </if>
      <if test="sex != null"> 
        `sex`           = #{sex}          ,
      </if>
      <if test="salary != null"> 
        `salary`        = #{salary}       ,
      </if>
      <if test="age != null"> 
        `age`           = #{age}          ,
      </if>
      <if test="birthDay != null"> 
        `birth_day`     = #{birthDay}     ,
      </if>
      <if test="remarks != null"> 
        `remarks`       = #{remarks}      ,
      </if>
      <if test="user != null and user.username != null and user.username != ''"> 
        `user_username` = #{user.username},
      </if>
      <if test="region != null and region.id != null and region.id != ''"> 
        `region_id`     = #{region.id}    ,
      </if>
      <if test="createBy != null"> 
        `create_by`     = #{createBy}     ,
      </if>
      <if test="createDate != null"> 
        `create_date`   = #{createDate}   ,
      </if>
      <if test="updateBy != null"> 
        `update_by`     = #{updateBy}     ,
      </if>
      <if test="updateDate != null"> 
        `update_date`   = #{updateDate}   ,
      </if>
      <if test="status != null"> 
        `status`        = #{status}       ,
      </if>
      <if test="statusName != null"> 
        `status_name`   = #{statusName}   ,
      </if>
    </set>
    where id =  #{id}
  </update>
  
  <delete id="delete">
    delete from `test_demo` where id =  #{id}
  </delete>
  
  <delete id="deleteByIds">
    delete from `test_demo`
    <where>
          <foreach collection="ids" item="id" separator="or">
              id = #{id}
          </foreach>
      </where>
  </delete>
  
  <select id="findList" resultMap="dataMap">
    select * from `test_demo`
    <where>
      <include refid="querys" />
    </where>
  </select>
  
</mapper>