<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.hualuomoli.demo.base.mapper.BaseDemoMapper">

	<sql id="columns">
		`id`        as "id"      ,
		`name`      as "name"    ,
		`sex`       as "sex"     ,
		`salary`    as "salary"  ,
		`age`       as "age"     ,
		`birth_day` as "birthDay",
		`remarks`   as "remarks" ,
		`user_id`   as "user.id" 
	</sql>
	
	<sql id="querys">
		<if test="id != null and id != ''">	
			and `id`        = #{id}      
		</if>
		<if test="name != null and name != ''">	
			and `name`      = #{name}    
		</if>
		<if test="sex != null and sex != ''">	
			and `sex`       = #{sex}     
		</if>
		<if test="salary != null">	
			and `salary`    = #{salary}  
		</if>
		<if test="age != null">	
			and `age`       = #{age}     
		</if>
		<if test="birthDay != null">	
			and `birth_day` = #{birthDay}
		</if>
		<if test="remarks != null and remarks != ''">	
			and `remarks`   = #{remarks} 
		</if>
		<if test="user != null and user.id != null and user.id != ''">	
			and `user_id`   = #{user.id} 
		</if>
	</sql>
	
	<select id="get" resultType="com.github.hualuomoli.demo.base.entity.BaseDemo">
		select 
			<include refid="columns" />
		from `t_demo`
		where id =  #{id}
	</select>
	
	<insert id="insert">
		insert into `t_demo` (
			`id`       ,
			`name`     ,
			`sex`      ,
			`salary`   ,
			`age`      ,
			`birth_day`,
			`remarks`  ,
			`user_id`  
		) values (
			#{id}      ,
			#{name}    ,
			#{sex}     ,
			#{salary}  ,
			#{age}     ,
			#{birthDay},
			#{remarks} ,
			#{user.id} 
		)
	</insert>
	
	<insert id="batchInsert">
		insert into `t_demo` (
			`id`       ,
			`name`     ,
			`sex`      ,
			`salary`   ,
			`age`      ,
			`birth_day`,
			`remarks`  ,
			`user_id`  
		) 
		 <foreach collection="list" item="obj" separator="union all">
            select
				#{obj.id}      ,
				#{obj.name}    ,
				#{obj.sex}     ,
				#{obj.salary}  ,
				#{obj.age}     ,
				#{obj.birthDay},
				#{obj.remarks} ,
				#{obj.user.id} 
         </foreach>
	</insert>
	
	<update id="update">
		update `t_demo`
		<set>
			<if test="name != null">	
				`name`      = #{name}    ,
			</if>
			<if test="sex != null">	
				`sex`       = #{sex}     ,
			</if>
			<if test="salary != null">	
				`salary`    = #{salary}  ,
			</if>
			<if test="age != null">	
				`age`       = #{age}     ,
			</if>
			<if test="birthDay != null">	
				`birth_day` = #{birthDay},
			</if>
			<if test="remarks != null">	
				`remarks`   = #{remarks} ,
			</if>
			<if test="user != null and user.id != null and user.id != ''">	
				`user_id`   = #{user.id} ,
			</if>
		</set>
		where id =  #{id}
	</update>
	
	<delete id="delete">
		delete from `t_demo` where id =  #{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from `t_demo`
		<where>
	        <foreach collection="ids" item="id" separator="or">
	            id = #{id}
	        </foreach>
	    </where>
	</delete>
	
	<select id="findList" resultType="com.github.hualuomoli.demo.base.entity.BaseDemo">
		select
			<include refid="columns" />
		from `t_demo`
		<where>
			<include refid="querys" />
		</where>
		<if test="orderByStr != null and orderByStr != ''">
			order by ${orderByStr}
		</if>
	</select>
	
</mapper>