<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.hualuomoli.extend.base.mapper.BaseRoleMapper">

  <sql id="columns">
    `id`          as "id"        ,
    `role_code`   as "roleCode"  ,
    `role_name`   as "roleName"  ,
    `create_by`   as "createBy"  ,
    `create_date` as "createDate",
    `update_by`   as "updateBy"  ,
    `update_date` as "updateDate",
    `status`      as "status"    ,
    `status_name` as "statusName"
  </sql>
  
  <sql id="querys">
    <if test="id != null and id != ''"> 
      and `id`          = #{id}        
    </if>
    <if test="roleCode != null and roleCode != ''"> 
      and `role_code`   = #{roleCode}  
    </if>
    <if test="roleName != null and roleName != ''"> 
      and `role_name`   = #{roleName}  
    </if>
    <if test="createBy != null and createBy != ''"> 
      and `create_by`   = #{createBy}  
    </if>
    <if test="createDate != null"> 
      and `create_date` = #{createDate}
    </if>
    <if test="updateBy != null and updateBy != ''"> 
      and `update_by`   = #{updateBy}  
    </if>
    <if test="updateDate != null"> 
      and `update_date` = #{updateDate}
    </if>
    <if test="status != null"> 
      and `status`      = #{status}    
    </if>
    <if test="statusName != null and statusName != ''"> 
      and `status_name` = #{statusName}
    </if>
	<!-- 比较查询 -->
    <if test="roleCodeArray != null"> 
      and
      <foreach collection="roleCodeArray" open="(" close=")" separator="or" item="data">
    		`role_code` = #{data}
    	</foreach>
    </if>
  </sql>
  
  <select id="get" resultType="com.github.hualuomoli.extend.base.entity.BaseRole">
    select 
      <include refid="columns" />
    from `sys_role`
    where id =  #{id}
  </select>
  
  <insert id="insert">
    insert into `sys_role` (
      `id`         ,
      `role_code`  ,
      `role_name`  ,
      `create_by`  ,
      `create_date`,
      `update_by`  ,
      `update_date`,
      `status`     ,
      `status_name`
    ) values (
      #{id}        ,
      #{roleCode}  ,
      #{roleName}  ,
      #{createBy}  ,
      #{createDate},
      #{updateBy}  ,
      #{updateDate},
      #{status}    ,
      #{statusName}
    )
  </insert>
  
  <insert id="batchInsert">
    insert into `sys_role` (
      `id`         ,
      `role_code`  ,
      `role_name`  ,
      `create_by`  ,
      `create_date`,
      `update_by`  ,
      `update_date`,
      `status`     ,
      `status_name`
    ) 
     <foreach collection="list" item="obj" separator="union all">
            select
        #{obj.id}        ,
        #{obj.roleCode}  ,
        #{obj.roleName}  ,
        #{obj.createBy}  ,
        #{obj.createDate},
        #{obj.updateBy}  ,
        #{obj.updateDate},
        #{obj.status}    ,
        #{obj.statusName}
         </foreach>
  </insert>
  
  <update id="update">
    update `sys_role`
    <set>
      <if test="roleCode != null"> 
        `role_code`   = #{roleCode}  ,
      </if>
      <if test="roleName != null"> 
        `role_name`   = #{roleName}  ,
      </if>
      <if test="createBy != null"> 
        `create_by`   = #{createBy}  ,
      </if>
      <if test="createDate != null"> 
        `create_date` = #{createDate},
      </if>
      <if test="updateBy != null"> 
        `update_by`   = #{updateBy}  ,
      </if>
      <if test="updateDate != null"> 
        `update_date` = #{updateDate},
      </if>
      <if test="status != null"> 
        `status`      = #{status}    ,
      </if>
      <if test="statusName != null"> 
        `status_name` = #{statusName},
      </if>
    </set>
    where id =  #{id}
  </update>
  
  <delete id="delete">
    delete from `sys_role` where id =  #{id}
  </delete>
  
  <delete id="deleteByIds">
    delete from `sys_role`
    <where>
          <foreach collection="ids" item="id" separator="or">
              id = #{id}
          </foreach>
      </where>
  </delete>
  
  <select id="findList" resultType="com.github.hualuomoli.extend.base.entity.BaseRole">
    select
      <include refid="columns" />
    from `sys_role`
    <where>
      <include refid="querys" />
    </where>
  </select>
  
</mapper>